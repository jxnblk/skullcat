{"version":3,"sources":["webpack:///./src/loops.js","webpack:///./src/pages/remix.js"],"names":["loops","reduce","acc","filename","_objectSpread2","objectSpread_default","basename","synths","Object","keys","filter","name","test","drums","types","offsets","lengths","pitches","config","tempo","loop","tracks","sample","muted","start","length","pitch","volume","a","b","Keyboard","props","state","useAudio","useEffect","handler","e","key","metaKey","shiftKey","ctrlKey","playing","window","Column","core_browser_esm","extends_default","css","_ref","Select","_ref2","value","options","onChange","remix_Column","htmlFor","_ref3","id","map","option","Track","_ref4","type","_state$tracks$name","track","objectWithoutPropertiesLoose_default","src","react_default","Fragment","use_beats","steps","repeat","_ref5","onClick","_tracks","remix_Select","val","_tracks2","_tracks3","parseInt","_tracks4","_tracks5","parseFloat","Clock","step","__webpack_exports__","_ref6","styles","*","boxSizing","body","margin","color","backgroundColor","initialState","remix_Keyboard","_ref7","remix_Clock","remix_Track"],"mappings":"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","file":"component---src-pages-remix-js-d3bd590b00801b7506de.js","sourcesContent":["const bucket = 'https://s3.amazonaws.com/jxnblk/skullcat2019/'\n\nexport const files = [\n  '1984-a.mp3',\n  '1984-b.mp3',\n  '1984-c.mp3',\n  '2016-a.mp3',\n  '2016-b.mp3',\n  '2016-c.mp3',\n  '2016-d.mp3',\n  '2016-e.mp3',\n  '2016-f.mp3',\n  '2016-g.mp3',\n  '2016-h.mp3',\n  '2048-a.mp3',\n  '2048-b.mp3',\n  '2048-c.mp3',\n  '2048-d.mp3',\n  'spectral.mp3',\n  'drums-1984-a.mp3',\n  'drums-1984-b.mp3',\n  'drums-1984-c.mp3',\n  'drums-2016-a.mp3',\n  'drums-2016-b.mp3',\n  'drums-2016-c.mp3',\n  'drums-2016-d.mp3',\n  'drums-2016-e.mp3',\n  'drums-2016-f.mp3',\n  'drums-2016-g.mp3',\n  'drums-2048-a.mp3',\n  'drums-2048-b.mp3',\n  'drums-2048-c.mp3',\n  'drums-2048-d.mp3',\n]\n\nconst basename = filename => filename.split('.')[0]\n\nexport const loops = files.reduce((acc, filename) => ({\n  ...acc,\n  [basename(filename)]: bucket + filename,\n}), {})\n","import React, {\n  useEffect,\n} from 'react'\nimport { Global } from '@emotion/core'\nimport {\n  Provider,\n  PlayPause,\n  Sampler,\n  Debug,\n  useAudio,\n} from 'use-beats'\nimport { loops } from '../loops'\n\nconst synths = Object.keys(loops).filter(name => !/^drums/.test(name))\nconst drums = Object.keys(loops).filter(name => /^drums/.test(name))\n\nconst types = {\n  drums,\n  synths\n}\n\nconst offsets = [\n  0, 2, 4, 6, 8, 10, 12, 14, 16,\n  18, 20, 22, 24, 26, 28, 30, 32\n]\nconst lengths = [\n  4, 6, 8, 12, 16, 20, 24, 32, 40, 48, 64,\n]\nconst pitches = [\n  3/4, 7/8, 1, 5/4, 3/2,\n]\n\nconst config = {\n  tempo: 160,\n  loop: 32,\n  tracks: {\n    drums: {\n      sample: drums[4],\n      muted: false,\n      start: 14,\n      length: 32,\n      pitch: 1,\n      volume: 2/4,\n    },\n    a: {\n      sample: synths[6],\n      muted: false,\n      start: 16,\n      length: 24,\n      pitch: 1,\n      volume: 2/4,\n    },\n    b: {\n      sample: synths[7],\n      muted: false,\n      start: 6,\n      length: 32,\n      pitch: 3/4,\n      volume: 2/4,\n    },\n  },\n}\n\nconst Keyboard = props => {\n  const state = useAudio()\n  useEffect(() => {\n    const handler = e => {\n      const { key, metaKey, shiftKey, ctrlKey } = e\n      if (metaKey || shiftKey || ctrlKey) return\n      switch (key) {\n        case ' ':\n          state.setState({ playing: !state.playing })\n          break\n      }\n    }\n\n    window.addEventListener('keydown', handler)\n    return () => {\n      window.removeEventListener('keydown', handler)\n    }\n  }, [ state.playing ])\n  return false\n}\n\nconst Column = props =>\n  <div\n    {...props}\n    css={{\n      width: '25%',\n      paddingLeft: 16,\n      paddingRight: 16,\n    }}\n  />\n\nconst Select = ({\n  name,\n  value,\n  options,\n  onChange,\n}) =>\n  <Column>\n    <label htmlFor={name}\n      css={{\n        display: 'block',\n      }}>\n      {name}\n    </label>\n    <select\n      id={name}\n      name={name}\n      value={value}\n      onChange={e => {\n        onChange(e.target.value)\n      }}>\n      {options.map(option => (\n        <option key={option}>{option}</option>\n      ))}\n    </select>\n  </Column>\n\nconst Track = ({\n  name,\n  type,\n}) => {\n  const state = useAudio()\n  const { sample, ...track } = state.tracks[name]\n  const src = loops[sample]\n  return (\n    <>\n      <Sampler\n        src={src}\n        steps={[0]}\n        {...track}\n        repeat={track.length}\n      />\n      <div\n        css={{\n          display: 'flex',\n          alignItems: 'center',\n          padding: 32,\n        }}>\n        <Column>\n          <button\n            onClick={e => {\n              state.setState({\n                tracks: {\n                  [name]: {\n                    muted: !track.muted\n                  }\n                }\n              })\n            }}>\n            {track.muted ? 'Unmute' : 'Mute'}\n          </button>\n        </Column>\n        <Select\n          name='sample'\n          value={sample}\n          onChange={val => {\n            state.setState({\n              tracks: {\n                [name]: {\n                  sample: val\n                }\n              }\n            })\n          }}\n          options={types[type]}\n        />\n        <Select\n          name='start'\n          value={track.start}\n          options={offsets}\n          onChange={value => {\n            state.setState({\n              tracks: {\n                [name]: {\n                  start: parseInt(value)\n                }\n              }\n            })\n          }}\n        />\n        <Select\n          name='length'\n          value={track.length}\n          options={lengths}\n          onChange={value => {\n            state.setState({\n              tracks: {\n                [name]: {\n                  length: parseInt(value)\n                }\n              }\n            })\n          }}\n        />\n        <Select\n          name='pitch'\n          value={track.pitch}\n          options={pitches}\n          onChange={value => {\n            state.setState({\n              tracks: {\n                [name]: {\n                  pitch: parseFloat(value)\n                }\n              }\n            })\n          }}\n        />\n      </div>\n    </>\n  )\n}\n\nconst Clock = props => {\n  const state = useAudio()\n  return (\n    <pre>{state.step}</pre>\n  )\n}\n\nexport default props =>\n  <div\n    css={{\n      fontFamily: 'system-ui, sans-serif',\n      color: 'white',\n      backgroundColor: 'black',\n    }}>\n    <Global\n      styles={{\n        '*': {\n          boxSizing: 'border-box',\n        },\n        body: {\n          margin: 0,\n          color: 'white',\n          backgroundColor: 'black',\n        }\n      }}\n    />\n    <Provider initialState={config}>\n      <Keyboard />\n      <div\n        css={{\n          padding: 32,\n        }}>\n        <PlayPause />\n        <Clock />\n      </div>\n      <Track name='drums' type='drums' />\n      <Track name='a' type='synths' />\n      <Track name='b' type='synths' />\n    </Provider>\n  </div>\n"],"sourceRoot":""}